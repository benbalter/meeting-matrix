- hosts: all
  tasks:
    - name: Ensure SSH Key is authorized
      authorized_key:
        user: pi
        state: present
        key: https://github.com/benbalter.keys
    - name: update and upgrade apt packages
      become: true
      apt:
        upgrade: dist
        update_cache: true
    - name: set timezone
      community.general.timezone:
        name: America/New_York
      become: true
    - name: install unattended upgrades
      become: true
      apt:
        name: unattended-upgrades
        state: present
    - name: Setup unattended upgrades
      debconf:
        name: unattended-upgrades
        question: unattended-upgrades/enable_auto_updates
        vtype: boolean
        value: "true"
    - name: install ntp
      become: true
      apt:
        name: ntp
        state: present
    - name: enable ntp
      service:
        name: ntp
        state: started
        enabled: true
    - name: Install dependencies
      become: true
      apt:
        name: "{{ item }}"
        state: present
        update_cache: true
      loop:
        - python3-dev
        - python3-pillow
        - python3-pip
        - git
    - name: Ensure deploy key is present
      community.crypto.openssh_keypair:
        path: "~/.ssh/id_github"
        type: ed25519
      register: deploy_key
    - name: Ensure deploy key is authorized
      community.general.github_deploy_key:
        key: "{{ deploy_key.public_key }}"
        name: Raspberry Pi
        state: present
        read_only: false
        owner: benbalter
        repo: meeting-matrix
        token: "{{ lookup('community.general.onepassword', 'Raspberry pi', field='GitHub Token') }}"
    - name: Clone benbalter/meeting-matrix
      git:
        repo: git@github.com:benbalter/meeting-matrix.git
        dest: /home/pi/meeting-matrix/
        clone: true
        update: true
        key_file: ~/.ssh/id_github
        accept_hostkey: true
    - name: Install python requirements
      pip:
        chdir: /home/pi/meeting-matrix/
        requirements: requirements.txt
    - name: Clone hzeller/rpi-rgb-led-matrix repo
      git:
        repo: https://github.com/hzeller/rpi-rgb-led-matrix
        dest: /home/pi/rpi-rgb-led-matrix/
        clone: true
        update: true
        accept_hostkey: true
    - name: Build Python bindings
      community.general.make:
        chdir: /home/pi/rpi-rgb-led-matrix/
        target: build-python
        params:
          HARDWARE_DESC: adafruit-hat
          PYTHON: /usr/bin/python3
          DLED_COLS: 64
          DLED_ROWS: 32
    - name: Install Python bindings
      become: true
      community.general.make:
        chdir: /home/pi/rpi-rgb-led-matrix/
        target: install-python
        params:
          HARDWARE_DESC: adafruit-hat
          PYTHON: /usr/bin/python3
          DLED_COLS: 64
          DLED_ROWS: 32
    - name: Ensure deploy key is present
      community.crypto.openssh_keypair:
        path: "~/.ssh/id_github"
        type: ed25519
      register: deploy_key
    - name: Allow Python to run as root
      community.general.capabilities:
        path: /usr/bin/python3.9
        capability: "cap_sys_nice=eip"
    - name: Install docker dependencies
      become: true
      apt:
        name: "{{ item }}"
        state: present
        update_cache: true
      loop:
        - apt-transport-https
        - ca-certificates
        - curl
        - gnupg
        - lsb-release
    - name: add Docker GPG key
      become: true
      apt_key:
        url: https://download.docker.com/linux/debian/gpg
        state: present
    - name: add docker repository to apt
      become: true
      apt_repository:
        repo: deb [arch=arm64] https://download.docker.com/linux/debian bullseye stable
        state: present
    - name: install docker
      become: true
      apt:
        name: "{{ item }}"
        state: present
      loop:
        - docker-ce
        - docker-ce-cli
        - containerd.io
    - name: Add user to docker group
      become: true
      user:
        name: pi
        groups: docker
        append: true
    - name: Enable & Start Docker service
      become: true
      service:
        name: docker
        enabled: true
        state: started
    - name: Build Docker image
      community.docker.docker_image:
        build:
          path: /home/pi/meeting-matrix/
          pull: true
        name: meeting-matrix
        source: build
        force_source: true
    - name: Create Docker container
      community.docker.docker_container:
        name: meeting-matrix
        image: meeting-matrix
        restart_policy: unless-stopped
        detach: true